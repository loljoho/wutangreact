{"version":3,"sources":["components/FriendCard/index.js","components/Jumbotron.js","components/Row.js","App.js","index.js"],"names":["FriendCard","props","onClick","handleClick","id","className","alt","name","src","image","alias","location","Jumbtron","dark","style","fontSize","score","highScore","Row","helper","children","App","state","friends","clicked","randomize","array","i","length","j","Math","floor","random","handleClickOnImage","includes","alert","resetGame","setState","prevState","checkHighScore","handleWin","this","console","log","Jumbotron","map","header","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ujEA+BeA,MA5Bf,SAAoBC,GAClB,OACE,yBAAKC,QAAS,kBAAID,EAAME,YAAYF,EAAMG,KAAKC,UAAU,QACvD,yBAAKA,UAAU,iBACb,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnC,yBAAKJ,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BJ,EAAMM,MAEhC,4BACE,0CADF,IAC2BN,EAAMS,OAEjC,4BACE,6CADF,IAC8BT,EAAMU,cCE/BC,EAlBE,SAAAX,GACf,OACE,yBACEI,UAAS,4DAEPJ,EAAMY,KAAO,qBAAuB,qBAF7B,MAKT,0BAAMR,UAAU,MAAMS,MAAO,CAAEC,SAAU,KAAzC,UACQd,EAAMe,OAEd,0BAAMX,UAAU,MAAMS,MAAO,CAAEC,SAAU,KAAzC,eACad,EAAMgB,aCJVC,EARH,SAAAjB,GACV,OACE,yBAAKI,UAAWJ,EAAMkB,OAAN,cAAsBlB,EAAMkB,QAAW,OACpDlB,EAAMmB,W,OCyFEC,E,2MAvFbC,MAAQ,CACNC,UACAC,QAAS,GACTP,UAAW,G,EASbQ,UAAY,SAAAC,GACV,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAK3C,OAAOH,G,EAGTO,mBAAqB,SAAA7B,GAEf,EAAKkB,MAAME,QAAQU,SAAS9B,IAC9B+B,MAAM,YACN,EAAKC,aAGL,EAAKC,UACH,SAAAC,GAAS,MAAK,CACZd,QAAQ,GAAD,mBAAMc,EAAUd,SAAhB,CAAyBpB,IAChCmB,QAAS,EAAKE,UAAU,EAAKH,MAAMC,aAErC,WACE,EAAKgB,iBACL,EAAKC,gB,EAMbD,eAAiB,WACX,EAAKjB,MAAME,QAAQI,OAAS,EAAKN,MAAML,WACzC,EAAKoB,SAAS,CACZpB,UAAW,EAAKK,MAAME,QAAQI,U,EAKpCY,UAAY,WACN,EAAKlB,MAAME,QAAQI,SAAW,EAAKN,MAAMC,QAAQK,SACnDO,MAAM,YACN,EAAKC,c,EAGTA,UAAU,WACR,EAAKC,SAAS,CAACb,QAAS,KACxB,EAAKC,UAAU,EAAKH,MAAMC,U,mFAlD1BkB,KAAKJ,SAAS,CACZd,QAASkB,KAAKhB,UAAUgB,KAAKnB,MAAMC,a,+BAoD7B,IAAD,OACPmB,QAAQC,IAAIF,KAAKnB,OADV,MAEmCmB,KAAKnB,MAArCE,EAFH,EAEGA,QAASD,EAFZ,EAEYA,QAASN,EAFrB,EAEqBA,UAC5B,OACE,6BACE,kBAAC2B,EAAD,CAAW5B,MAAOQ,EAAQI,OAAQX,UAAWA,EAAWJ,MAAI,IAC5D,kBAAC,EAAD,CAAKM,OAAM,0BACRI,EAAQsB,KAAK,YAAyC,IAAvCzC,EAAsC,EAAtCA,GAAIG,EAAkC,EAAlCA,KAAME,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAClC,OACA,kBAAC,EAAD,CAAYmC,OAAQvC,EAChBM,MAAI,EACJT,GAAIA,EACJ2C,IAAK3C,EACLG,KAAMA,EACNE,MAAOA,EACPC,MAAOA,EACPC,SAAUA,EACVR,YAAc,EAAK8B,8B,GA9ErBe,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dae2f774.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div onClick={()=>props.handleClick(props.id)} className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Alias:</strong> {props.alias}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n\n      {/*<span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n  </span> */}\n\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from 'react';\n\nconst Jumbtron = props => {\n  return (\n    <div\n      className={`\n      jumbotron jumbotron-fluid p-2 text-center ${\n        props.dark ? 'bg-dark text-light' : 'bg-light text-dark'\n      } `}>\n      {/* TAKE STYLE OUT JUST TO MAKE A POINT */}\n      <span className=\"m-3\" style={{ fontSize: 30 }}>\n      Score: {props.score}\n      </span>\n      <span className=\"m-3\" style={{ fontSize: 30 }}>\n      High Score: {props.highScore}\n      </span>\n    </div>\n  );\n};\n\nexport default Jumbtron;\n","import React from 'react';\n\nconst Row = props => {\n  return (\n    <div className={props.helper ? `row ${props.helper}` : 'row'}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Row;\n","import React, {Component} from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Jumbotron from './components/Jumbotron';\nimport Row from './components/Row';\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  state = {\n    friends,\n    clicked: [],\n    highScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({\n      friends: this.randomize(this.state.friends)\n    });\n  }\n\n  randomize = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  };\n\n  handleClickOnImage = id => {\n    // this is loss condition\n    if (this.state.clicked.includes(id)) {\n      alert('you lost');\n      this.resetGame();\n    } else {\n\n      this.setState(\n        prevState => ({\n          clicked: [...prevState.clicked, id],\n          friends: this.randomize(this.state.friends)\n        }),\n        () => {\n          this.checkHighScore();\n          this.handleWin();\n        }\n      );\n    }\n  };\n\n  checkHighScore = () => {\n    if (this.state.clicked.length > this.state.highScore) {\n      this.setState({\n        highScore: this.state.clicked.length\n      });\n    }\n  };\n\n  handleWin = () => {\n    if (this.state.clicked.length === this.state.friends.length) {\n      alert('You won!');\n      this.resetGame();\n    }\n  };\n  resetGame=()=>{\n    this.setState({clicked: []})\n    this.randomize(this.state.friends)\n  }\n  \n  render() {\n    console.log(this.state);\n      const { clicked, friends, highScore } = this.state;\n    return (\n      <div>\n        <Jumbotron score={clicked.length} highScore={highScore} dark />\n        <Row helper={`justify-content-center`}>\n          {friends.map( ({id, name, image, alias, location}) => {     \n                return(\n                <FriendCard header={name} \n                    dark\n                    id={id}\n                    key={id}\n                    name={name}\n                    image={image}\n                    alias={alias}\n                    location={location}\n                    handleClick= {this.handleClickOnImage}\n                    />\n          )}\n          )}\n        </Row>\n      </div>\n       )\n     }\n}\n\nexport default App;\n\n ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}